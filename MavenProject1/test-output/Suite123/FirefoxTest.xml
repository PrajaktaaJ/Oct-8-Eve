<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-L03PUD3" failures="0" tests="8" name="FirefoxTest" time="7.092" errors="0" timestamp="2023-07-16T18:49:57 IST">
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeTest launchBrowser" time="6.589">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unable to find a matching set of capabilities
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-L03PUD3&amp;apos;, ip: &amp;apos;192.168.1.7&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.2.1&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: ">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-L03PUD3', ip: '192.168.1.7', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: driver.version: ChromeDriver
remote stacktrace: 
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:1002)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at browser.BrowserSetup.openChromeBrowser(BrowserSetup.java:20)
at testNGTest.TestNGClass2.launchBrowser(TestNGClass2.java:32)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeClass beforeClass" time="-1.689513597188E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeMethod beforeMethod" time="-1.689513597213E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterMethod afterMethod" time="-1.689513597229E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeMethod beforeMethod" time="-1.689513597235E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterMethod afterMethod" time="-1.689513597247E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeMethod beforeMethod" time="-1.689513597251E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@BeforeClass beforeClass" time="-1.689513597261E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testNGTest.TestNGClass1" name="@BeforeMethod beforeMethod" time="-1.689513597267E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterMethod afterMethod" time="-1.689513597267E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@BeforeMethod beforeMethod" time="-1.689513597273E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@AfterMethod afterMethod" time="-1.689513597301E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@BeforeMethod beforeMethod" time="-1.689513597305E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterMethod afterMethod" time="-1.689513597317E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterClass afterClass" time="-1.689513597334E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testNGTest.TestNGClass1" name="@AfterMethod afterMethod" time="-1.689513597352E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@BeforeMethod beforeMethod" time="-1.689513597357E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@AfterMethod afterMethod" time="-1.689513597369E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@BeforeMethod beforeMethod" time="-1.689513597374E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@AfterMethod afterMethod" time="-1.68951359739E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGTest.TestNGClass1" name="@AfterClass afterClass" time="-1.689513597397E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testNGTest.TestNGClass2" name="@AfterTest afterTlass" time="-1.689513597402E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTlass -->
  <testcase classname="testNGTest.TestNGClass2" name="testA" time="0.0">
    <skipped/>
  </testcase> <!-- testA -->
  <testcase classname="testNGTest.TestNGClass2" name="testB" time="0.0">
    <skipped/>
  </testcase> <!-- testB -->
  <testcase classname="testNGTest.TestNGClass2" name="testC" time="0.0">
    <skipped/>
  </testcase> <!-- testC -->
  <testcase classname="testNGTest.TestNGClass1" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="testNGTest.TestNGClass2" name="testD" time="0.0">
    <skipped/>
  </testcase> <!-- testD -->
  <testcase classname="testNGTest.TestNGClass1" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase classname="testNGTest.TestNGClass1" name="test3" time="0.0">
    <skipped/>
  </testcase> <!-- test3 -->
  <testcase classname="testNGTest.TestNGClass1" name="test4" time="0.0">
    <skipped/>
  </testcase> <!-- test4 -->
</testsuite> <!-- FirefoxTest -->
